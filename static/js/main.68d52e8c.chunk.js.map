{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getRandomName","value","Math","random","toString","slice","Clock","state","date","Date","clockName","timerId","this","window","setInterval","setState","console","log","_prevProps","prevState","clearInterval","className","toLocaleTimeString","Component","App","hasClock","document","addEventListener","React","ReactDOM","render","getElementById"],"mappings":"sNAEA,SAASA,IACP,IAAMC,EAAQC,KAAKC,SAChBC,WACAC,MAAM,EAAG,GAEZ,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,UAAWV,KAHf,EAMSW,aANT,yDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEP,KAAM,IAAIC,OAE1BO,QAAQC,IAAI,EAAKV,MAAMC,QACtB,KAEHK,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEL,UAAWV,QAC1B,QAjBP,gCAoBE,SAAmBkB,EAA0BC,GACvCA,EAAUT,YAAcE,KAAKL,MAAMG,WAErCM,QAAQC,IAAR,uBAA4BE,EAAUT,UAAtC,eAAsDE,KAAKL,MAAMG,cAvBvE,kCA2BE,WACEG,OAAOO,cAAcR,KAAKD,WA5B9B,oBA+BE,WACE,OACE,sBAAKU,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGT,KAAKL,MAAMG,YAGb,YAED,sBAAMW,UAAU,cAAhB,SACGT,KAAKL,MAAMC,KAAKc,8BAzC3B,GAA2BC,aCPdC,EAAb,4MACEjB,MAAQ,CACNkB,UAAU,GAFd,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,WACvC,EAAKZ,SAAS,CAAEU,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKZ,SAAS,CAAEU,UAAU,SAXhC,oBAeE,WACE,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCT,KAAKL,MAAMkB,UAAY,cAAC,EAAD,WAnBhC,GAAyBG,IAAML,WCL/BM,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.68d52e8c.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getRandomName(): string {\n  const value = Math.random()\n    .toString()\n    .slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  date: Date,\n  clockName: string,\n};\n\nexport class Clock extends Component<{}, State> {\n  state = {\n    date: new Date(),\n    clockName: getRandomName(),\n  };\n\n  public timerId: number | undefined;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    }, 1000);\n\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_prevProps: Readonly<{}>, prevState: Readonly<State>) {\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.state.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}